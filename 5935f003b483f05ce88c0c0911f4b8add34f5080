{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dfee0b14_47665eb7",
        "filename": "pom.xml",
        "patchSetId": 7
      },
      "lineNbr": 468,
      "author": {
        "id": 307763
      },
      "writtenOn": "2023-06-12T13:40:53Z",
      "side": 1,
      "message": "The code in the branch has:\n\n  -Xdoclint:-missing\n\nSince it hides the file and error line I removed the option (see PS3 https://git.eclipse.org/r/c/jgit/jgit/+/202303/3/pom.xml ) and went to address all the missing bits.\n\nThen I guess Java 17 is more brutal in that regard? :/\n\n\nI tried `doclint:all` but it reports so many errors that I have choose to not set it to avoid the change affecting too many files.\n\n \nThen when I run PS3 with Java 17 I see plenty of errors (which are not reported by Java 11).  If only there was a way to pin the javadoc version or finely ignore specific errors :/",
      "range": {
        "startLine": 468,
        "startChar": 29,
        "endLine": 468,
        "endChar": 51
      },
      "revId": "5935f003b483f05ce88c0c0911f4b8add34f5080",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71c60fe3_5253b420",
        "filename": "pom.xml",
        "patchSetId": 7
      },
      "lineNbr": 468,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-06-12T14:56:30Z",
      "side": 1,
      "message": "Apparently Java 17\u0027s doclint wants private methods to be also documented which we don\u0027t want to enforce. Switching this off using \"-Xdoclint:all,-missing/private\" fails with the error: \"error: Access qualifiers not permitted for -Xdoclint arguments\" which seems odd since javac says this is supported:\n\n```\n$ javac -X\n...\n  -Xdoclint\n        Enable recommended checks for problems in javadoc comments\n  -Xdoclint:(all|none|[-]\u003cgroup\u003e)[/\u003caccess\u003e]\n        Enable or disable specific checks for problems in javadoc comments,\n        where \u003cgroup\u003e is one of accessibility, html, missing, reference, or syntax,\n        and \u003caccess\u003e is one of public, protected, package, or private.\n  -Xdoclint/package:[-]\u003cpackages\u003e(,[-]\u003cpackage\u003e)*\n        Enable or disable checks in specific packages. Each \u003cpackage\u003e is either the\n        qualified name of a package or a package name prefix followed by .*, which\n        expands to all sub-packages of the given package. Each \u003cpackage\u003e can be prefixed\n        with - to disable checks for the specified package or packages.\n...\n```\n\nSince this doesn\u0027t seem to work I for now set -missing without access specifier.\n\nThe Java 17 release notes\nhttps://www.oracle.com/java/technologies/javase/17-relnote-issues.html\nmention that doclint now raises a warning for missing descriptions and empty tags. I think I fixed those.",
      "parentUuid": "dfee0b14_47665eb7",
      "range": {
        "startLine": 468,
        "startChar": 29,
        "endLine": 468,
        "endChar": 51
      },
      "revId": "5935f003b483f05ce88c0c0911f4b8add34f5080",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d35191f9_15959b3d",
        "filename": "pom.xml",
        "patchSetId": 7
      },
      "lineNbr": 468,
      "author": {
        "id": 307763
      },
      "writtenOn": "2023-06-12T16:45:22Z",
      "side": 1,
      "message": "That is the help for `javac` but the Maven plugin relies on `javadoc` as I understand it and it hasn\u0027t learned about the access specifier unfortunately!\n\n\u003e $ JAVA_HOME\u003d/usr/lib/jvm/java-17-openjdk-amd64 javadoc -X\n\u003e ...\n\u003e \n\u003e    -Xdoclint     Enable recommended checks for problems in javadoc comments\n\u003e    -Xdoclint:(all|none|[-]\u003cgroup\u003e)\n\u003e                  Enable or disable specific checks for problems in javadoc\n\u003e                  comments, where \u003cgroup\u003e is one of accessibility, html,\n\u003e                  missing, reference, or syntax.\n\u003e    -Xdoclint/package:([-]\u003cpackages\u003e)\n\u003e                  Enable or disable checks in specific packages. \u003cpackages\u003e is a\n\u003e                  comma separated list of package specifiers. A package\n\u003e                  specifier is either a qualified name of a package or a package\n\u003e                  name prefix followed by .*, which expands to all sub-packages\n\u003e                  of the given package. Prefix the package specifier with - to\n\u003e                  disable checks for the specified packages.\n\nInvoking it:\n\n $ JAVA_HOME\u003d/usr/lib/jvm/java-17-openjdk-amd64 javadoc -Xdoclint:-missing/private\n error: Access qualifiers not permitted for -Xdoclint arguments\n 1 error\n\n:-(\n\n\u003e Since this doesn\u0027t seem to work I for now set -missing without access specifier.\n\u003e The Java 17 release notes https://www.oracle.com/java/technologies/javase/17-relnote-issues.html mention that doclint now raises a warning for missing descriptions and empty tags. I think I fixed those.\n\nAwesome! :)\n\n\n\nNote with java 11 it fails for me with:\n\n\u003e [ERROR] /home/hashar/projects/jgit/org.eclipse.jgit/src/org/eclipse/jgit/treewalk/TreeWalk.java:551: error: header used out of sequence: \u003cH4\u003e\n\u003e [ERROR] \t * \u003ch4\u003eGit attribute computation\u003c/h4\u003e\n\u003e [ERROR] \t   ^\n\nI noticed CI invokes maven with `-Dmaven.javadoc.skip\u003dtrue` :-(",
      "parentUuid": "71c60fe3_5253b420",
      "range": {
        "startLine": 468,
        "startChar": 29,
        "endLine": 468,
        "endChar": 51
      },
      "revId": "5935f003b483f05ce88c0c0911f4b8add34f5080",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3dbbf872_df2d0d71",
        "filename": "pom.xml",
        "patchSetId": 7
      },
      "lineNbr": 468,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-06-12T18:43:39Z",
      "side": 1,
      "message": "Yes, the validation job does that to speed-up the feedback.\n\nIf we reach a state where it makes sense to fail the build if there are doclint warnings/errors we can change that.",
      "parentUuid": "d35191f9_15959b3d",
      "range": {
        "startLine": 468,
        "startChar": 29,
        "endLine": 468,
        "endChar": 51
      },
      "revId": "5935f003b483f05ce88c0c0911f4b8add34f5080",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41ca9de5_52209f14",
        "filename": "pom.xml",
        "patchSetId": 7
      },
      "lineNbr": 468,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-06-12T23:16:05Z",
      "side": 1,
      "message": "I tried to configure this option on javac (maven-compiler-plugin), there it accepts the access qualifier but that has no effect. And I can only set this for javac but not for ecj (Eclipse Java compiler) which we use to fail the build if there are incompatible API changes or badly formatted code.\n\nSee https://issues.apache.org/jira/browse/MCOMPILER-123",
      "parentUuid": "3dbbf872_df2d0d71",
      "range": {
        "startLine": 468,
        "startChar": 29,
        "endLine": 468,
        "endChar": 51
      },
      "revId": "5935f003b483f05ce88c0c0911f4b8add34f5080",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ]
}