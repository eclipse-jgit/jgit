{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fa0387dc_fb8b69d5",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphWriter.java",
        "patchSetId": 11
      },
      "lineNbr": 100,
      "author": {
        "id": 307612
      },
      "writtenOn": "2023-07-11T16:43:47Z",
      "side": 1,
      "message": "we should match the convention of packWriter and reftableWriter to make the stats as a field within the writer class, then only return it when the invoker wants it.",
      "revId": "f2cc5c93a39c8ba11fa4edb8b30d7d40a8d803fd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "476ca760_6d4b349e",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphWriter.java",
        "patchSetId": 11
      },
      "lineNbr": 100,
      "author": {
        "id": 201156
      },
      "writtenOn": "2023-07-11T18:22:00Z",
      "side": 1,
      "message": "In that pattern, what happens when you call \"write\" multiple times?\n\nReturning the stats on the call makes clear their content and keeps the class immutable. The caller can ignore them if they don\u0027t need them.",
      "parentUuid": "fa0387dc_fb8b69d5",
      "revId": "f2cc5c93a39c8ba11fa4edb8b30d7d40a8d803fd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41ea486e_669786b5",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphWriter.java",
        "patchSetId": 11
      },
      "lineNbr": 100,
      "author": {
        "id": 307612
      },
      "writtenOn": "2023-07-11T21:07:16Z",
      "side": 1,
      "message": "like i said, we should follow the convention of reftableWriter. reftableWriter only tracks the latest stats of the latest generated reftable; the latest stats are flushed in the last line of the write logic before being replaced by the new stats.",
      "parentUuid": "476ca760_6d4b349e",
      "revId": "f2cc5c93a39c8ba11fa4edb8b30d7d40a8d803fd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21c6d8af_411db965",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphWriter.java",
        "patchSetId": 11
      },
      "lineNbr": 100,
      "author": {
        "id": 150123
      },
      "writtenOn": "2023-07-19T17:34:53Z",
      "side": 1,
      "message": "I think immutability has a lot of benefits, so I\u0027m going to stay with that.",
      "parentUuid": "41ea486e_669786b5",
      "revId": "f2cc5c93a39c8ba11fa4edb8b30d7d40a8d803fd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f48b20ad_0bc3ccb6",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/CommitGraphWriter.java",
        "patchSetId": 11
      },
      "lineNbr": 100,
      "author": {
        "id": 307612
      },
      "writtenOn": "2023-07-19T20:39:59Z",
      "side": 1,
      "message": "the CommitGraphWriter objects are created by each thread, there\u0027s no shared global singleton CommitGraphWriter for different threads. I don\u0027t believe immutability is as important as following existing coding pattern of similar classes. I digress since the code is already merged.",
      "parentUuid": "21c6d8af_411db965",
      "revId": "f2cc5c93a39c8ba11fa4edb8b30d7d40a8d803fd",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ]
}