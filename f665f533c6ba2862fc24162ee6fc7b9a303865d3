{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "89e1d1b7_ba063973",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1038403
      },
      "writtenOn": "2024-12-03T17:36:16Z",
      "side": 1,
      "message": "I think I have a similar, but much more scalable approach to this which should drastically reduce latencies of a single thread, and never make a single thread do more work than it would have originally. I will upload a new PS.",
      "revId": "f665f533c6ba2862fc24162ee6fc7b9a303865d3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a00c6d67_1e7b84fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1038494
      },
      "writtenOn": "2024-12-03T21:44:28Z",
      "side": 1,
      "message": "Chiming in here as a drive by observation. The CL message states \"Since the removal\nis not something that needs to be synchronous\", which would be a surprise to me. My expectation would be that calling `Pack#close()` does synchronously close open file descriptors, which is important on Windows to avoid file deletion failures due to locked files. Mildly related could be https://github.com/eclipse-jgit/jgit/issues/66",
      "revId": "f665f533c6ba2862fc24162ee6fc7b9a303865d3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd8c50c5_bf1c0448",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1038403
      },
      "writtenOn": "2024-12-03T22:55:12Z",
      "side": 1,
      "message": "Thanks for pointing me to that issue, I have commented there. That\u0027s a tricky problem, but I don\u0027t believe calling Pack.close() is intended to be something which synchronously closes the file descriptor (as you likely have unfortuntately discovered).",
      "parentUuid": "a00c6d67_1e7b84fc",
      "revId": "f665f533c6ba2862fc24162ee6fc7b9a303865d3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea6a36b6_87823bae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1038403
      },
      "writtenOn": "2024-12-04T20:06:23Z",
      "side": 1,
      "message": "FYI, so far the patchsets on this change are synchronous in single threaded operation, so I don\u0027t think this change makes things any worse for the concerned Windows case. The approach in PS3 could easily be made to be synchronous using a lock instead of a counter, but then it would lose advantage #2, and it would be blocking threads when it doesn\u0027t really need to.",
      "parentUuid": "cd8c50c5_bf1c0448",
      "revId": "f665f533c6ba2862fc24162ee6fc7b9a303865d3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "620d0cbd_76535219",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1038403
      },
      "writtenOn": "2024-12-05T17:13:40Z",
      "side": 1,
      "message": "s/PS3/PS7/",
      "parentUuid": "ea6a36b6_87823bae",
      "revId": "f665f533c6ba2862fc24162ee6fc7b9a303865d3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20b7ca21_811a21c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1038403
      },
      "writtenOn": "2024-12-05T17:22:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "89e1d1b7_ba063973",
      "revId": "f665f533c6ba2862fc24162ee6fc7b9a303865d3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}