{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3252bc62_95006792",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 201156
      },
      "writtenOn": "2023-07-14T20:25:55Z",
      "side": 1,
      "message": "With the uncommitted changes in the stack, it is hard to review this one (e.g. \"stats\" will be an object and returned in the write).\n\nThis is doing two things: moving conf to an object and changing when the commits are passed to the class. Those are unrelated changes and should go to different commits. The first sounds like a good idea, the second not so much.\n\nFinally, AFAIK there is no plan to implement commit-graph layers yet, so that shouldn\u0027t be a reason to change anything.\n ",
      "revId": "921b497b9186ffb59d6690d74b8e8c24d10ec413",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92e860c1_fbbcad35",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 307612
      },
      "writtenOn": "2023-07-17T16:06:58Z",
      "side": 1,
      "message": "we can postpone this cl for now since it\u0027s built on top of other gen num v2 CLs.\n\nAs to stats, your suggestion of `\"stats\" will be an object and returned in the write` is anti pattern to how packwriter or reftablewriter do with their stats; we should uniformly calculate stats in write and only return them when asked. \n\nI am fine with splitting GraphCommits change from this cl. The idea of having GraphCommits solely as the write method input is completely isolate the commits needed away from the writer object itself so we can reuse the writer multiple times. \n\ncommit-graph layers implementation is real possibility soon since dfsblockcache takes in everything within the commit graph object; the introduction of bloom filter chunks and gen num v2 chunks will at least double the existing size of Commit Graph. Having the ability to reuse the same writer for multiple commit graphs allow us to write time based commit graphs (i.e. having a commit graph with only the most recent commits), or branch based commit graphs.",
      "parentUuid": "3252bc62_95006792",
      "revId": "921b497b9186ffb59d6690d74b8e8c24d10ec413",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ]
}