{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4fe41a3a_d2f39321",
        "filename": "org.eclipse.jgit.test/tst-rsrc/org/eclipse/jgit/diff/Conflict_PostImage",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 307467
      },
      "writtenOn": "2023-03-17T08:16:11Z",
      "side": 1,
      "message": "The patch is expecting lineB to be the new line after line3, so this output doesn\u0027t show any actual issue.\n\nI would expect to see lineA here, or in some \"expected head\" part.\n(Can we think of that as a 3-way merge with actual base, the base as in the patch file being \"other\", and the patch result being \"mine\"?)",
      "revId": "23060ee398ad466f76e0feccaef00eb0f0dcd6d1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4a299de_2c1a5781",
        "filename": "org.eclipse.jgit.test/tst-rsrc/org/eclipse/jgit/diff/Conflict_PostImage",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 149285
      },
      "writtenOn": "2023-03-17T08:34:33Z",
      "side": 1,
      "message": "It expects line A pre image and it\u0027s not there which is why it\u0027s a conflict in the first place. If it was there, the logic would have deleted it, so it\u0027s gone post image. The patch file does tell what it expects post image to look like:\n\n```\n line3\n lineB\n line5\n line6\n```\n\nSo no line A.\n\nThis is exactly what the conflict markers say? (the part between \u003c\u003c and \u003d\u003d has pre image and the part between \u003d\u003d and \u003e\u003e has post image and we can\u0027t automatically merge these two, so spit out conflict markers).\n\nHow could we do a 3way merge if we can\u0027t find the patch sha1 in the repo? (i.e. how would we construct the base/other/mine file from the patch and repo and what would that help with?)",
      "parentUuid": "4fe41a3a_d2f39321",
      "revId": "23060ee398ad466f76e0feccaef00eb0f0dcd6d1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44fdb518_c435adea",
        "filename": "org.eclipse.jgit.test/tst-rsrc/org/eclipse/jgit/diff/Conflict_PostImage",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 307467
      },
      "writtenOn": "2023-03-17T09:01:58Z",
      "side": 1,
      "message": "\u003e So no line A.\nI understand the logic of why this is currently not shown here. But if the users are looking only at the result file, they see the patch they actually expected to apply as the *post image*, with no conflict visible to them; then they should go to the *patch input* (which is stored elsewhere) and manually compare it with the *pre image* to see that there\u0027s a mishmash. This is quite tedious IMO.\n\n\u003e How could we do a 3way merge\nWe can\u0027t do the actual merge this way, but I think we can (and should) construct the diff markers in a similar way. Can\u0027t the missing part be directly inferred from the `hunkLines` variable?",
      "parentUuid": "c4a299de_2c1a5781",
      "revId": "23060ee398ad466f76e0feccaef00eb0f0dcd6d1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a24fcf37_b64767d5",
        "filename": "org.eclipse.jgit.test/tst-rsrc/org/eclipse/jgit/diff/Conflict_PostImage",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 149285
      },
      "writtenOn": "2023-03-17T09:13:36Z",
      "side": 1,
      "message": "\u003e We can\u0027t do the actual merge this way, but I think we can (and should) construct the diff markers in a similar way.\n\nWhich diff markers? Conflict markers (they don\u0027t contain diff a la +/-, just content).\n\n\u003e Can\u0027t the missing part be directly inferred from the `hunkLines` variable?\nWhat is the missing part? Can you help me understand your suggestion better by providing an example (patch, pre image, post image)? Thanks!",
      "parentUuid": "44fdb518_c435adea",
      "revId": "23060ee398ad466f76e0feccaef00eb0f0dcd6d1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fb8b881_1c6c9f32",
        "filename": "org.eclipse.jgit.test/tst-rsrc/org/eclipse/jgit/diff/Conflict_PostImage",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 307467
      },
      "writtenOn": "2023-03-17T09:28:00Z",
      "side": 1,
      "message": "I was meant something similar to this[1], including the ||||||| markers.\n\nIn this examples the output will be:\n\nline1\nline2\n\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD\nline3\nline4\nline5\nline6\n||||||| ASSUMED PATCH BASE\nline3\nlineA\nline5\nline6\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nline3\nlineB\nline5\nline6\n\u003e\u003e\u003e\u003e\u003e\u003e\u003e PATCH\nline7\nline8\n\n[1] (https://git-scm.com/docs/git-merge#_how_conflicts_are_presented)",
      "parentUuid": "a24fcf37_b64767d5",
      "revId": "23060ee398ad466f76e0feccaef00eb0f0dcd6d1",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ]
}