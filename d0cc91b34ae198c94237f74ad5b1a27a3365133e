{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ddd33c67_c84d1647",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/RevCommit.java",
        "patchSetId": 15
      },
      "lineNbr": 321,
      "author": {
        "id": 256613
      },
      "writtenOn": "2022-07-06T23:04:16Z",
      "side": 1,
      "message": "If you\u0027re going to add RevCommitWithOverwrittenParents this check is useless (you can do instanceOf instead, because most places doesn\u0027t and shouldn\u0027t actually care about fact that parents were overwritten (and this functionality is alien to that class).",
      "range": {
        "startLine": 311,
        "startChar": 1,
        "endLine": 321,
        "endChar": 2
      },
      "revId": "d0cc91b34ae198c94237f74ad5b1a27a3365133e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec1edda8_4dc7accf",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/RevCommit.java",
        "patchSetId": 15
      },
      "lineNbr": 321,
      "author": {
        "id": 227701
      },
      "writtenOn": "2022-07-07T23:36:36Z",
      "side": 1,
      "message": "Agreed",
      "parentUuid": "ddd33c67_c84d1647",
      "range": {
        "startLine": 311,
        "startChar": 1,
        "endLine": 321,
        "endChar": 2
      },
      "revId": "d0cc91b34ae198c94237f74ad5b1a27a3365133e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c98cbe06_d41fe544",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/RevCommit.java",
        "patchSetId": 15
      },
      "lineNbr": 356,
      "author": {
        "id": 256613
      },
      "writtenOn": "2022-07-06T23:04:16Z",
      "side": 1,
      "message": "If you plan to leave parents as is and overwrite this method it can make some out of this repo usages which access the field directly to work in a strange way. IMHO this is fine, but it should be mentioned in description just in case.",
      "range": {
        "startLine": 356,
        "startChar": 20,
        "endLine": 356,
        "endChar": 30
      },
      "revId": "d0cc91b34ae198c94237f74ad5b1a27a3365133e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8678d056_00f5424d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/RevCommit.java",
        "patchSetId": 15
      },
      "lineNbr": 356,
      "author": {
        "id": 227701
      },
      "writtenOn": "2022-07-07T23:36:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c98cbe06_d41fe544",
      "range": {
        "startLine": 356,
        "startChar": 20,
        "endLine": 356,
        "endChar": 30
      },
      "revId": "d0cc91b34ae198c94237f74ad5b1a27a3365133e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8323cc4_f51a38d3",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/RevWalk.java",
        "patchSetId": 15
      },
      "lineNbr": 909,
      "author": {
        "id": 256613
      },
      "writtenOn": "2022-07-06T23:04:16Z",
      "side": 1,
      "message": "is it safe? documentation said:\n\n\t * An existing mapping for \u003cb\u003emust not\u003c/b\u003e be in this map. Callers must\n\t * first call {@link #get(AnyObjectId)} to verify there is no current\n\t * mapping prior to adding a new mapping, or use {@link #addIfAbsent(Entry)}.",
      "range": {
        "startLine": 909,
        "startChar": 7,
        "endLine": 909,
        "endChar": 14
      },
      "revId": "d0cc91b34ae198c94237f74ad5b1a27a3365133e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38cc585a_840260c6",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/RevWalk.java",
        "patchSetId": 15
      },
      "lineNbr": 909,
      "author": {
        "id": 227701
      },
      "writtenOn": "2022-07-07T23:36:36Z",
      "side": 1,
      "message": "updated the code to update the underlying revCommit with its new parents if it exists. Also updated the doc.",
      "parentUuid": "b8323cc4_f51a38d3",
      "range": {
        "startLine": 909,
        "startChar": 7,
        "endLine": 909,
        "endChar": 14
      },
      "revId": "d0cc91b34ae198c94237f74ad5b1a27a3365133e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a89a504e_adcdc686",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/RevWalk.java",
        "patchSetId": 15
      },
      "lineNbr": 909,
      "author": {
        "id": 256613
      },
      "writtenOn": "2022-07-08T19:07:17Z",
      "side": 1,
      "message": "Can you give any valid use case for using that? As of now this looks like a very risky thing to do. Let\u0027s say if we have 2 view objects for the commit: one is a plain RevCommit we plan to use to mark all commits and another is a FilteredRevCommit which has overwritten parents and used in blame-like part of the algorithm. If we call rewWalk.update(filteredRevCommit) it will update parents for the plain RevCommit and, despite being RevCommit class (not a filtered one) it will start acting as a filtered one. This will break some algorithms for sure.",
      "parentUuid": "38cc585a_840260c6",
      "range": {
        "startLine": 909,
        "startChar": 7,
        "endLine": 909,
        "endChar": 14
      },
      "revId": "d0cc91b34ae198c94237f74ad5b1a27a3365133e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21ec17a1_e80abc8d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/RevWalk.java",
        "patchSetId": 15
      },
      "lineNbr": 909,
      "author": {
        "id": 256613
      },
      "writtenOn": "2022-07-12T18:20:05Z",
      "side": 1,
      "message": "(not resolved)",
      "parentUuid": "a89a504e_adcdc686",
      "range": {
        "startLine": 909,
        "startChar": 7,
        "endLine": 909,
        "endChar": 14
      },
      "revId": "d0cc91b34ae198c94237f74ad5b1a27a3365133e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80926380_93006f0d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/RevWalk.java",
        "patchSetId": 15
      },
      "lineNbr": 909,
      "author": {
        "id": 227701
      },
      "writtenOn": "2022-07-12T20:53:20Z",
      "side": 1,
      "message": "ahmm.. thats a valid point.. \nI am changing back to the earlier revision which added the RevCommit to the owners map with some restriction.\nReg: is it safe? from the doc. I think it is. It always uses the first element from the linkedlist.\nThere is a test case in https://git.eclipse.org/r/c/jgit/jgit/+/194354 that leverages this. See BlameGeneratorTest.",
      "parentUuid": "a89a504e_adcdc686",
      "range": {
        "startLine": 909,
        "startChar": 7,
        "endLine": 909,
        "endChar": 14
      },
      "revId": "d0cc91b34ae198c94237f74ad5b1a27a3365133e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ]
}