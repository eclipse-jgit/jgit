{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c2f9086e_4ad1043f",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackExtBlockCacheTables.java",
        "patchSetId": 10
      },
      "lineNbr": 29,
      "author": {
        "id": 1020855
      },
      "writtenOn": "2024-06-25T18:04:33Z",
      "side": 1,
      "message": "This description would almost fit the \"regular\" table.\n\nMaybe something like:\n\"A table that internally keeps some extensions in different tables.\"\n\nand explain here the why, e.g. (if I got it right):\n\"A single cache table works well when the stored items have similar size. A too big item can create churn in the smaller entries.\n\nWe know that some extensions tend to store much bigger entries than other. This implementation allows to put extensions in different tables to keep a more consistent entry size and/or fine-tune the cache setup for them.\"",
      "revId": "a5ab0fb47f2be6f73be9e340b52ef2abe1d949ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19cd31ef_ab64ee6c",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackExtBlockCacheTables.java",
        "patchSetId": 10
      },
      "lineNbr": 29,
      "author": {
        "id": 1037574
      },
      "writtenOn": "2024-06-25T22:32:31Z",
      "side": 1,
      "message": "I\u0027ve reworded this a bit, using your wording here.",
      "parentUuid": "c2f9086e_4ad1043f",
      "revId": "a5ab0fb47f2be6f73be9e340b52ef2abe1d949ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1d424e9_90abf383",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackExtBlockCacheTables.java",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1020855
      },
      "writtenOn": "2024-06-25T18:04:33Z",
      "side": 1,
      "message": "For symmetry, could we call this \"PackExtBlockCacheTable\" or \"CompositeBlockCacheTable\"?\n\nThen we have DfsBlockCache holding a DfsBlockCacheTable (interface). and DfsBlockCacheTable has 2 implementations \"ClockXXX\" and \"PackExtXXX\" (or \"CompositeXXX\").",
      "range": {
        "startLine": 32,
        "startChar": 6,
        "endLine": 32,
        "endChar": 32
      },
      "revId": "a5ab0fb47f2be6f73be9e340b52ef2abe1d949ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45106be6_e098e97d",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackExtBlockCacheTables.java",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1037574
      },
      "writtenOn": "2024-06-25T22:32:31Z",
      "side": 1,
      "message": "Sure, done.",
      "parentUuid": "e1d424e9_90abf383",
      "range": {
        "startLine": 32,
        "startChar": 6,
        "endLine": 32,
        "endChar": 32
      },
      "revId": "a5ab0fb47f2be6f73be9e340b52ef2abe1d949ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fed6521_c3549aa0",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackExtBlockCacheTables.java",
        "patchSetId": 10
      },
      "lineNbr": 72,
      "author": {
        "id": 1020855
      },
      "writtenOn": "2024-06-25T18:04:33Z",
      "side": 1,
      "message": "This could be better encapsulated if this constructor receives the desired configuration and it decides by itself what data structures to use to represent it.\n\nThere is no need for an external entity to decide e.g. how this class represents the \"default\" table.",
      "revId": "a5ab0fb47f2be6f73be9e340b52ef2abe1d949ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9535f059_63ad324a",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackExtBlockCacheTables.java",
        "patchSetId": 10
      },
      "lineNbr": 72,
      "author": {
        "id": 1037574
      },
      "writtenOn": "2024-06-25T22:32:31Z",
      "side": 1,
      "message": "At this point this is used for testing and allowing somewhat customizable setups.\n\nA method of converting configs to this structure will be added with the configuration changes.",
      "parentUuid": "7fed6521_c3549aa0",
      "revId": "a5ab0fb47f2be6f73be9e340b52ef2abe1d949ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03e75b37_e3535534",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackExtBlockCacheTables.java",
        "patchSetId": 10
      },
      "lineNbr": 79,
      "author": {
        "id": 1037809
      },
      "writtenOn": "2024-06-26T17:31:09Z",
      "side": 1,
      "message": "Should we verify that these are sorted by PackExt value before creating the list?\n\nIt looks like later in the `getBlockCacheStats` method we assume that they are ordered in this way to return a valid BlockCacheStats.",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 79,
        "endChar": 0
      },
      "revId": "a5ab0fb47f2be6f73be9e340b52ef2abe1d949ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3de638ee_0928053c",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackExtBlockCacheTables.java",
        "patchSetId": 10
      },
      "lineNbr": 79,
      "author": {
        "id": 1037574
      },
      "writtenOn": "2024-06-26T17:48:06Z",
      "side": 1,
      "message": "getBlockCacheStats doesn\u0027t assume any ordering from blockCacheTables, only the ordering of the stats held by and single DfsBlockCacheTable.\n\nAnd while I\u0027d prefer to not assume the ordering there, the pre-existing usage of long[] forces that.",
      "parentUuid": "03e75b37_e3535534",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 79,
        "endChar": 0
      },
      "revId": "a5ab0fb47f2be6f73be9e340b52ef2abe1d949ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddf2ac11_d9f16994",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackExtBlockCacheTables.java",
        "patchSetId": 10
      },
      "lineNbr": 161,
      "author": {
        "id": 1020855
      },
      "writtenOn": "2024-06-25T18:04:33Z",
      "side": 1,
      "message": "Insted of keeping a reference to the list of stats, could this just calculate the stats in the constructor and become an immutable object?",
      "revId": "a5ab0fb47f2be6f73be9e340b52ef2abe1d949ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1074a31a_2b407458",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackExtBlockCacheTables.java",
        "patchSetId": 10
      },
      "lineNbr": 161,
      "author": {
        "id": 1037574
      },
      "writtenOn": "2024-06-25T22:32:31Z",
      "side": 1,
      "message": "This was done in this way to not have a call to every getHitCount, getEvictions, (...) method in the internal stats every time a request to any single get* method occurs.\n\nWith how DfsBlockCache is structured callers are getting a single stat per call, not the BlockCacheStats itself. \nWe could assume that callers call them all together, but the code does not guarantee this.",
      "parentUuid": "ddf2ac11_d9f16994",
      "revId": "a5ab0fb47f2be6f73be9e340b52ef2abe1d949ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c50263e_9be0a9f9",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackExtBlockCacheTables.java",
        "patchSetId": 10
      },
      "lineNbr": 235,
      "author": {
        "id": 1020855
      },
      "writtenOn": "2024-06-25T18:04:33Z",
      "side": 1,
      "message": "Shouldn\u0027t all these arrays have the same length? (the number of packExt values).",
      "revId": "a5ab0fb47f2be6f73be9e340b52ef2abe1d949ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "129412a1_0fccd869",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackExtBlockCacheTables.java",
        "patchSetId": 10
      },
      "lineNbr": 235,
      "author": {
        "id": 1037574
      },
      "writtenOn": "2024-06-25T22:32:31Z",
      "side": 1,
      "message": "They should, but the code doesn\u0027t actually impose that limit. BlockCacheStats#BlockCacheStats is another pre-existing example of this.\n\nIdeally we\u0027d be passing an object that imposes that limit, but as it is the long[]s don\u0027t guarantee it.",
      "parentUuid": "1c50263e_9be0a9f9",
      "revId": "a5ab0fb47f2be6f73be9e340b52ef2abe1d949ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}