{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0e3b0e79_63b8b30e",
        "filename": "org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitSmartHttpTools.java",
        "patchSetId": 8
      },
      "lineNbr": 230,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-10-20T00:30:06Z",
      "side": 1,
      "message": "Double check the indentation in this line. Looks like either it would fit in the previous line of use a level less of indentation... but maybe it is fine as it is.",
      "revId": "6ee88dc037fd2528d2756b941ef32dbcd9b5f145",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d3e578b_9091ccbe",
        "filename": "org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitSmartHttpTools.java",
        "patchSetId": 8
      },
      "lineNbr": 230,
      "author": {
        "id": 307600
      },
      "writtenOn": "2022-10-20T22:17:38Z",
      "side": 1,
      "message": "This is the formatting Eclipse is suggesting. Is there another tool or source of truth I should look at for code style?",
      "parentUuid": "0e3b0e79_63b8b30e",
      "revId": "6ee88dc037fd2528d2756b941ef32dbcd9b5f145",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2369a62_0251cea3",
        "filename": "org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitSmartHttpTools.java",
        "patchSetId": 8
      },
      "lineNbr": 230,
      "author": {
        "id": 44628
      },
      "writtenOn": "2022-10-21T20:47:10Z",
      "side": 1,
      "message": "Nope, the Eclipse format is OK. Maximum line width is set to 80, now we\u0027d be at 83, so it wraps.\n\nThe comments in lines 224/225 and 232 extend a little beyond column 80 because apparently they were never re-formatted since this Eclipse format is active. (They date back to 2012.)",
      "parentUuid": "0d3e578b_9091ccbe",
      "revId": "6ee88dc037fd2528d2756b941ef32dbcd9b5f145",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a53c86ac_94ee1510",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/transport/parser/FirstCommandTest.java",
        "patchSetId": 8
      },
      "lineNbr": 35,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-10-20T00:30:06Z",
      "side": 1,
      "message": "Typo.\n\nAnd I would expect this to be true, with key\u003dunknownCap and value\u003dsome-value",
      "revId": "6ee88dc037fd2528d2756b941ef32dbcd9b5f145",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e9b4299_f4b87781",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/transport/parser/FirstCommandTest.java",
        "patchSetId": 8
      },
      "lineNbr": 35,
      "author": {
        "id": 307600
      },
      "writtenOn": "2022-10-20T22:17:38Z",
      "side": 1,
      "message": "This test (without the typo) was meant to explicitly show that unknown capabilities get left as is without splitting on the \"\u003d\". Adjusted since it looks like we\u0027re going in a different direction.",
      "parentUuid": "a53c86ac_94ee1510",
      "revId": "6ee88dc037fd2528d2756b941ef32dbcd9b5f145",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c9c6912_0139bfcb",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/transport/parser/FirstCommand.java",
        "patchSetId": 8
      },
      "lineNbr": 68,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-10-20T00:30:06Z",
      "side": 1,
      "message": "This would split some capabilities and leave others as they. Again, we rather split all by the first \u0027\u003d\u0027 and then we don\u0027t need the predefined set.",
      "revId": "6ee88dc037fd2528d2756b941ef32dbcd9b5f145",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66ac91e6_6dc10c15",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/transport/parser/FirstCommand.java",
        "patchSetId": 8
      },
      "lineNbr": 68,
      "author": {
        "id": 307600
      },
      "writtenOn": "2022-10-20T22:17:38Z",
      "side": 1,
      "message": "Ok, let\u0027s go forward splitting all capabilities on the first \"\u003d\".",
      "parentUuid": "8c9c6912_0139bfcb",
      "revId": "6ee88dc037fd2528d2756b941ef32dbcd9b5f145",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92ae0591_cce2f176",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/ReceivePack.java",
        "patchSetId": 8
      },
      "lineNbr": 118,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-10-20T00:30:06Z",
      "side": 1,
      "message": "This is not really true, e.g. for the agent now this will return \"agent\", when before it was returning \"agent\u003dagent-string\"...\n\nYou need to concat k\u003dv if v !\u003d null to keep it consistent. Ugly, but this is only for backwards compatilibity (this class should have disappeared when 6.0 was cut).",
      "revId": "6ee88dc037fd2528d2756b941ef32dbcd9b5f145",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2ac525c_3ffd5f17",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/transport/ReceivePack.java",
        "patchSetId": 8
      },
      "lineNbr": 118,
      "author": {
        "id": 307600
      },
      "writtenOn": "2022-10-20T22:17:38Z",
      "side": 1,
      "message": "I\u0027m not proud of this.",
      "parentUuid": "92ae0591_cce2f176",
      "revId": "6ee88dc037fd2528d2756b941ef32dbcd9b5f145",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ]
}