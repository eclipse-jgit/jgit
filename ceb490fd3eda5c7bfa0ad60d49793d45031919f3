{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e9b15304_44cd8959",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 7,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-14T22:46:25Z",
      "side": 1,
      "message": "This isn\u0027t true, as `RefDirectory` does use the `up-to-date` version.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 69
      },
      "revId": "ceb490fd3eda5c7bfa0ad60d49793d45031919f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60c9ce71_eb36783b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 7,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2025-05-15T09:14:02Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "e9b15304_44cd8959",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 69
      },
      "revId": "ceb490fd3eda5c7bfa0ad60d49793d45031919f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "683b616f_37d2b81a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 9,
      "author": {
        "id": 1022030
      },
      "writtenOn": "2025-05-14T15:37:14Z",
      "side": 1,
      "message": "Yes it does, so long as you have `trustPackedRefsStat` set correctly. Have you found some other case where you think `getPackedRefs()` is returning an outdated view of packed-refs?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 63
      },
      "revId": "ceb490fd3eda5c7bfa0ad60d49793d45031919f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a54daf0_cd55972c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 9,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-14T18:31:18Z",
      "side": 1,
      "message": "@danielesassoli@gmail.com did you have in your tests any specific `.gitconfig` or `jgit.config`? If yes, can you share it?",
      "parentUuid": "683b616f_37d2b81a",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 63
      },
      "revId": "ceb490fd3eda5c7bfa0ad60d49793d45031919f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c60b215_a8fe007c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 9,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-14T19:57:47Z",
      "side": 1,
      "message": "The issue is clarified: @danielesassoli@gmail.com\u0027s comments are referring to the `SnapshottingRefDirectory` and not the `RefDirectory`, which doesn\u0027t present the issue because it does a conditional refresh.\n\nI believe it makes sense to leave the `SnapshottingRefDirectory` beahaviour aside for now and concentrate in fixing `RefDirectory` alone, for not mixing two different problems.",
      "parentUuid": "3a54daf0_cd55972c",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 63
      },
      "revId": "ceb490fd3eda5c7bfa0ad60d49793d45031919f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a47bdab_10a04182",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 9,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2025-05-15T09:14:02Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "9c60b215_a8fe007c",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 63
      },
      "revId": "ceb490fd3eda5c7bfa0ad60d49793d45031919f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd9de7f3_efb82371",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 17,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-14T22:46:25Z",
      "side": 1,
      "message": "The two things were unrelated: this statement needs to be put into a different context and not associated with the staleness of the in-memory packed-refs.",
      "range": {
        "startLine": 15,
        "startChar": 31,
        "endLine": 17,
        "endChar": 8
      },
      "revId": "ceb490fd3eda5c7bfa0ad60d49793d45031919f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f19af21_7e1b9bd3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 17,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2025-05-15T09:14:02Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "dd9de7f3_efb82371",
      "range": {
        "startLine": 15,
        "startChar": 31,
        "endLine": 17,
        "endChar": 8
      },
      "revId": "ceb490fd3eda5c7bfa0ad60d49793d45031919f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa894806_f0a6edb5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 22,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-14T22:46:25Z",
      "side": 1,
      "message": "This is the key point and needs to be possibly rephrased it.\nThe locking needs to happen *before* getting the up-to-date version of the packed-refs and not afterwards.\n\nThe issue here isn\u0027t staleness but concurrency, as the packed ref *may change* between the refresh and the scanning to see if the ref to delete is in the packed refs.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 22,
        "endChar": 27
      },
      "revId": "ceb490fd3eda5c7bfa0ad60d49793d45031919f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e1f97a2_4b59d213",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 22,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2025-05-15T09:14:02Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "fa894806_f0a6edb5",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 22,
        "endChar": 27
      },
      "revId": "ceb490fd3eda5c7bfa0ad60d49793d45031919f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62dfe7cc_5606b31a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 26,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-14T22:46:25Z",
      "side": 1,
      "message": "This statement is now largely obsolete, based on the reviews discussions.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 26,
        "endChar": 52
      },
      "revId": "ceb490fd3eda5c7bfa0ad60d49793d45031919f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "805c9a8d_d6839154",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 26,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2025-05-15T09:14:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62dfe7cc_5606b31a",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 26,
        "endChar": 52
      },
      "revId": "ceb490fd3eda5c7bfa0ad60d49793d45031919f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b01073b0_e875683a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-14T19:57:47Z",
      "side": 1,
      "message": "@danielesassoli@gmail.com we concentrate on one problem at a time and fix `RefDirectory` first, without mixing the `SnapshottingRefDirectory` behaviour which doesn\u0027t refresh on `getPackedRefs()` because it actually use an in-memory snapshot.",
      "revId": "ceb490fd3eda5c7bfa0ad60d49793d45031919f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "765cab45_6126e9b8",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 22
      },
      "lineNbr": 686,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-14T20:07:52Z",
      "side": 1,
      "message": "You should keep the double pattern of use of `getPackedRefs()` outside and `refreshPackedRefs()` inside, as it would get the latest packed refs before the `if()`",
      "range": {
        "startLine": 685,
        "startChar": 0,
        "endLine": 686,
        "endChar": 32
      },
      "revId": "ceb490fd3eda5c7bfa0ad60d49793d45031919f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18120f1e_38c27162",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/RefDirectory.java",
        "patchSetId": 22
      },
      "lineNbr": 686,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2025-05-15T08:42:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "765cab45_6126e9b8",
      "range": {
        "startLine": 685,
        "startChar": 0,
        "endLine": 686,
        "endChar": 32
      },
      "revId": "ceb490fd3eda5c7bfa0ad60d49793d45031919f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}