{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b26b91f3_18c6a4e8",
        "filename": "org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/MergeTool.java",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1179
      },
      "writtenOn": "2022-06-08T20:57:06Z",
      "side": 1,
      "message": "Shouldn\u0027t that be also changed to system one?",
      "revId": "e47f86f10d9f607d85e271e0d3cf18017c8c61e3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b8c4ec5_9f75d925",
        "filename": "org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/MergeTool.java",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1684
      },
      "writtenOn": "2022-06-09T11:56:02Z",
      "side": 1,
      "message": "I went with UTF-8 here to be consistent with DiffTool, that was extended in this change: [1].\n\n* https://git.eclipse.org/r/c/jgit/jgit/+/138410/38/org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/DiffTool.java#123",
      "parentUuid": "b26b91f3_18c6a4e8",
      "revId": "e47f86f10d9f607d85e271e0d3cf18017c8c61e3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "916a6e8a_093dad2a",
        "filename": "org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/MergeTool.java",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 4
      },
      "writtenOn": "2022-06-16T10:52:42Z",
      "side": 1,
      "message": "I think both DiffTool and MergeTool should use SystemReader#getDefaultCharset to read console input, see I986f97a410d2fc70748b6f93228a2d45ff100b2c",
      "parentUuid": "4b8c4ec5_9f75d925",
      "revId": "e47f86f10d9f607d85e271e0d3cf18017c8c61e3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17eb36c3_0daf6d3c",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/util/HookTest.java",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 241433
      },
      "writtenOn": "2022-06-09T07:24:01Z",
      "side": 1,
      "message": "Consider using `StandardCharsets.UTF_8.toString()`",
      "range": {
        "startLine": 80,
        "startChar": 18,
        "endLine": 80,
        "endChar": 25
      },
      "revId": "e47f86f10d9f607d85e271e0d3cf18017c8c61e3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0ffd002_1a954bbe",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/util/HookTest.java",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1684
      },
      "writtenOn": "2022-06-09T11:56:02Z",
      "side": 1,
      "message": "I replaced here and in all other places in this file with StandardCharsets.UTF_8 constants, Those replacements could also be done in its own change though.",
      "parentUuid": "17eb36c3_0daf6d3c",
      "range": {
        "startLine": 80,
        "startChar": 18,
        "endLine": 80,
        "endChar": 25
      },
      "revId": "e47f86f10d9f607d85e271e0d3cf18017c8c61e3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e883b91_2a4a34b2",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/util/HookTest.java",
        "patchSetId": 2
      },
      "lineNbr": 313,
      "author": {
        "id": 241433
      },
      "writtenOn": "2022-06-09T07:24:01Z",
      "side": 1,
      "message": "StandardCharsets.UTF_8.toString()",
      "range": {
        "startLine": 313,
        "startChar": 18,
        "endLine": 313,
        "endChar": 25
      },
      "revId": "e47f86f10d9f607d85e271e0d3cf18017c8c61e3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "651f6d47_cccc7c0d",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/util/HookTest.java",
        "patchSetId": 2
      },
      "lineNbr": 313,
      "author": {
        "id": 1684
      },
      "writtenOn": "2022-06-09T11:56:02Z",
      "side": 1,
      "message": "Replaced with StandardCharsets.UTF_8.",
      "parentUuid": "1e883b91_2a4a34b2",
      "range": {
        "startLine": 313,
        "startChar": 18,
        "endLine": 313,
        "endChar": 25
      },
      "revId": "e47f86f10d9f607d85e271e0d3cf18017c8c61e3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce53be29_e34ba551",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/diffmergetool/CommandExecutor.java",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 1179
      },
      "writtenOn": "2022-06-08T20:57:06Z",
      "side": 1,
      "message": "Why do we use utf-8 here? If ai read it right, command is constructed from file paths that read from system in system encoding?",
      "revId": "e47f86f10d9f607d85e271e0d3cf18017c8c61e3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80c5597e_6e9b045a",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/diffmergetool/CommandExecutor.java",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 1684
      },
      "writtenOn": "2022-06-09T11:56:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce53be29_e34ba551",
      "revId": "e47f86f10d9f607d85e271e0d3cf18017c8c61e3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "941cc72a_08da37ee",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/diffmergetool/ToolException.java",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1179
      },
      "writtenOn": "2022-06-08T20:57:06Z",
      "side": 1,
      "message": "This is actually results in same string, just in a bit more verbose way. Wouldn\u0027t an annotation for error prone be better?",
      "revId": "e47f86f10d9f607d85e271e0d3cf18017c8c61e3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb11590c_6784c85f",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/diffmergetool/ToolException.java",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 44628
      },
      "writtenOn": "2022-06-08T21:25:26Z",
      "side": 1,
      "message": "As of Java 17, not passing a charset would use UTF-8 here.",
      "parentUuid": "941cc72a_08da37ee",
      "revId": "e47f86f10d9f607d85e271e0d3cf18017c8c61e3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81d89e75_90575c94",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/diffmergetool/ToolException.java",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1684
      },
      "writtenOn": "2022-06-09T11:56:02Z",
      "side": 1,
      "message": "Well, we could remove it, once Java 18 is more widely used, and/or Error Prone adjusted the bug pattern.\n\nWe also could suppress it with: @SuppressWarnings(\"DefaultCharset\"), it would be the first time in the code base, though.\n\nWe could also flip the severity in Bazel build toolchain:\n\n  tools/BUILD: \"-Xep:DefaultCharset:ERROR\",\n\nas it\u0027s warning per default and similarly to Gerrit, we increased the severity and discourage implicit use of the platform default charset.",
      "parentUuid": "cb11590c_6784c85f",
      "revId": "e47f86f10d9f607d85e271e0d3cf18017c8c61e3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd1b7403_837fa213",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/diffmergetool/ToolException.java",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 44628
      },
      "writtenOn": "2022-06-09T12:30:27Z",
      "side": 1,
      "message": "\u003e Well, we could remove it, once Java 18 is more widely used, and/or Error Prone adjusted the bug pattern.\n\nNot sure that would be the right way. Just because JEP 400 changes the default charset *in Java* to UTF-8, the Java program can still be run in a non-UTF8 locale, and the launched external program may not be Java (or run on an older Java version) and actually produce output in some charset depending on the locale set when it was started. Hence I believe I/O to/from external programs need to use a charset that depends on the locale. Closest approximation that we have for that is the \"native.encoding\" property specified in JEP 400, which is used by SystemReader.getInstance().getDefaultCharset().\n\n(Of course, if it is known that an external process always produces UTF-8, then using UTF-8 is fine. GPG is such an example; its stderr is always UTF-8. (But not necessarily its stdout.))\n\nI think having these implicit reliances on a default charset flagged is correct.\n\nCompare also bug 579383 in Eclipse Platform: looks like the Eclipse Console also gets tripped up somehow by JEP 400.",
      "parentUuid": "81d89e75_90575c94",
      "revId": "e47f86f10d9f607d85e271e0d3cf18017c8c61e3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ]
}