{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "45a2ce44_edc8cba0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 44628
      },
      "writtenOn": "2022-04-30T14:11:00Z",
      "side": 1,
      "message": "Please follow the commit message guidelines[1]. In particular, please link the bugzilla entry in a footer:\n\n  Bug: 579445\n  \n[1] https://wiki.eclipse.org/EGit/Contributor_Guide#Commit_message_guidelines",
      "revId": "3b85e52adeb34811602383a0fe4f429a8dc7e577",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d50cd7f_cfdab86c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 307367
      },
      "writtenOn": "2022-04-07T16:53:15Z",
      "side": 1,
      "message": "Hi, this commit tries to fix the bug described at https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d579445",
      "revId": "3b85e52adeb34811602383a0fe4f429a8dc7e577",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0488f62_cfdd974a",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 44628
      },
      "writtenOn": "2022-04-30T14:11:00Z",
      "side": 1,
      "message": "This should not be necessary. You wrote in bug 579445 that a config lock and a probe file were left behind.\n\nI think the problem with the config.lock is in FileBasedConfig.save(). This should call lf.lock() inside the try-catch block, not before. FS_Posix.createNewFileAtomic() probably should ensure that it cleans up correctly if it can\u0027t get the FileStore or create the link after having created the file. Not sure if lf.unlock() also would need to be improved.\n\nAs for the left-over probe file: it\u0027s probably not a good idea to create files in a daemon thread (FUTURE_RUNNER).",
      "revId": "3b85e52adeb34811602383a0fe4f429a8dc7e577",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cef0f321_28cfb318",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 307367
      },
      "writtenOn": "2022-04-30T15:33:13Z",
      "side": 1,
      "message": "the daemon thread (SAVE_RUNNER) is blocked at lf.commit() in the try-catch block. This can be proved by the correct content of config.lock file and the debug logs. Even in the try-catch block, the finally block (lf.unlock()) is still not executed, because the JVM is shutdown via System.exit().",
      "parentUuid": "a0488f62_cfdd974a",
      "revId": "3b85e52adeb34811602383a0fe4f429a8dc7e577",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7acff13_a8aa32c3",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 44628
      },
      "writtenOn": "2022-04-30T21:14:05Z",
      "side": 1,
      "message": "SAVE_RUNNER doesn\u0027t use a daemon thread. FUTURE_RUNNER does use daemon threads.",
      "parentUuid": "cef0f321_28cfb318",
      "revId": "3b85e52adeb34811602383a0fe4f429a8dc7e577",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f3c2eaf_6d1cc193",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 307367
      },
      "writtenOn": "2022-05-01T02:59:03Z",
      "side": 1,
      "message": "SAVE_RUNNER is indeed a non-daemon thread, while the previous description is still valid.\n\nThe root cause should be two:\n1. the \u0027finally\u0027 block for cleaning up lf.commit() is skipped when JVM is shutdown by System.exit().\n2. when writing config on the non-daemon SAVE_RUNNER thread, \u0027lf.commit()\u0027 has to wait the result of snapshot (run on a daemon FUTURE_RUNNER thread) which takes 3 seconds for detecting FS attributes.\n\nWith a addShutdownHook to kill SAVE_RUNNER gracefully, the skipped \u0027finally\u0027 block can be guaranteed to execute.",
      "parentUuid": "a7acff13_a8aa32c3",
      "revId": "3b85e52adeb34811602383a0fe4f429a8dc7e577",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7454fcb4_c7d85f36",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 44628
      },
      "writtenOn": "2022-05-01T07:06:07Z",
      "side": 1,
      "message": "OK, now I see. So if we\n\n* don\u0027t use daemon threads for the FUTURE_RUNNER\n* also shut down the FUTURE_RUNNER properly\n* handle InterruptedException properly in the future determining the FS properties\n* make sure the LockFile code properly cleans up when interrupted\n\nwe should be able to avoid having stray files (probes or lock files) being left and at the same time avoid any (noticeable) delay when shutting down.",
      "parentUuid": "5f3c2eaf_6d1cc193",
      "revId": "3b85e52adeb34811602383a0fe4f429a8dc7e577",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3f937fe_e1fc22a2",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 307367
      },
      "writtenOn": "2022-05-01T08:58:24Z",
      "side": 1,
      "message": "\u003e OK, now I see. So if we\n\u003e \n\u003e * don\u0027t use daemon threads for the FUTURE_RUNNER\n\u003e * also shut down the FUTURE_RUNNER properly\n\u003e * handle InterruptedException properly in the future determining the FS properties\n\u003e * make sure the LockFile code properly cleans up when interrupted\n\u003e \n\u003e we should be able to avoid having stray files (probes or lock files) being left and at the same time avoid any (noticeable) delay when shutting down.\n\nYes. To shut down FUTURE_RUNNER, it should be done in a addShutdownHook() and wait a reasonable short time (e.g. 100ms) for the threads cleaning up themselves. This also requires that we change some logic in the current busy-loop body of measureMinimalRacyInterval() to throw and catch InterruptedException.\n\nWithout shutting down FUTURE_RUNNER, like the implements in the current patch, the stray probes will also be removed. This is not guaranteed by JVM, but removing the stray probes should be done just soon before the JVM shutting down with high probability.",
      "parentUuid": "7454fcb4_c7d85f36",
      "revId": "3b85e52adeb34811602383a0fe4f429a8dc7e577",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a217d83_4135567c",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 44628
      },
      "writtenOn": "2022-05-01T14:54:07Z",
      "side": 1,
      "message": "Maybe for the FUTURE_RUNNER it is even good enough to register the probes, before creating them, with File.deleteOnExit(). (Leaving the runner as is, using daemon threads.) Then indeed we\u0027d have to deal only with the SAVE_RUNNER, and making sure the config lock gets properly removed when that thread is interrupted.",
      "parentUuid": "b3f937fe_e1fc22a2",
      "revId": "3b85e52adeb34811602383a0fe4f429a8dc7e577",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ]
}