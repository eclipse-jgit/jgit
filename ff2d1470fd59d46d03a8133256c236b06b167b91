{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "875090bb_fef67164",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1037694
      },
      "writtenOn": "2024-04-16T21:11:42Z",
      "side": 1,
      "message": "@jonathantanmy@google.com\n\nDo you happen to know why the BF of root commits and merge commits were not used in your implementation? was there a design consideration? or was this an oversight?",
      "revId": "ff2d1470fd59d46d03a8133256c236b06b167b91",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c89c05b_16ad337d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1037828
      },
      "writtenOn": "2024-04-16T21:39:38Z",
      "side": 1,
      "message": "Merge commits: most likely because the Bloom filter is only between a commit and its first parent.\nRoot commits: I\u0027m not sure. This might be an oversight inherited from C Git (search for \"consult Bloom filters for root commits\" in the Git mailing list (https://lore.kernel.org/git/) for more information.",
      "parentUuid": "875090bb_fef67164",
      "revId": "ff2d1470fd59d46d03a8133256c236b06b167b91",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7d4b93c_f8cccd16",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1037694
      },
      "writtenOn": "2024-04-16T22:04:43Z",
      "side": 1,
      "message": "\u003eMerge commits: most likely because the Bloom filter is only between a commit and its first parent.\n\nah i see. Is this a technical limitation? is there a reason we can\u0027t do a treeWalk for each parent path comparison, then store all changed path (from each parent) within the BF?",
      "parentUuid": "5c89c05b_16ad337d",
      "revId": "ff2d1470fd59d46d03a8133256c236b06b167b91",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34d426ea_468fbf4b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1037828
      },
      "writtenOn": "2024-04-17T00:07:35Z",
      "side": 1,
      "message": "The biggest reason why we\u0027re not doing it is because we want to have the same format as C Git. Besides that, I guess there is no inherent reason why we can\u0027t do it, but I think that typically, whenever we need to do a path-filtered rev walk, usually we do a first-parent walk (which is why the Bloom filter feature was designed that way).",
      "parentUuid": "e7d4b93c_f8cccd16",
      "revId": "ff2d1470fd59d46d03a8133256c236b06b167b91",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a69b34cb_05fb8435",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1037694
      },
      "writtenOn": "2024-04-17T16:58:10Z",
      "side": 1,
      "message": "I think it\u0027s worth testing the performance of including merge commits into BF, for two reason(s):\n\n1. Merge commits might be even better candidate for BF than commits with single parent. I assume most merge commits don’t have merge conflicts, so vast majority of the times, their BF checks are always negative, omitting the need to load the tree data for them and their parents (especially when they have a lot of parents)\n\n2. Currently, we only serve BF for commits with single parent, which means we still load tree data for the parents of merge commits, effectively making the BF generated for these parents pointless, since we aren’t saving time on them; I.e. we are loading the parents’ data when though we could be skipping them with BF.\n\n\u003ebecause we want to have the same format as C Git\n\nnot sure if I follow this reasoning; there\u0027s nothing explicit to the BF chunk format that distinguishes merge commits from commits with single parent. If we add BF for merge commits into Commit Graph, assuming Cgit does not read BF for merge commits, then Cgit should still be able to operate on the Jgit generated Commit Graph, no?",
      "parentUuid": "34d426ea_468fbf4b",
      "revId": "ff2d1470fd59d46d03a8133256c236b06b167b91",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}