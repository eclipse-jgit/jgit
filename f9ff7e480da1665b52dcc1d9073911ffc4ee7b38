{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "65b99853_d44ccb12",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 150123
      },
      "writtenOn": "2023-05-10T23:02:21Z",
      "side": 1,
      "message": "In this version, changed-path filters are written unconditionally if commit graphs are written; in other words, there is no configuration option. I\u0027m not sure myself if there should be a configuration option - I\u0027m leaning towards including one, but am open to opinions.",
      "revId": "f9ff7e480da1665b52dcc1d9073911ffc4ee7b38",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "094c35b0_cc91c9a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 304466
      },
      "writtenOn": "2023-05-11T02:50:44Z",
      "side": 1,
      "message": "\u003e In this version, changed-path filters are written unconditionally if commit graphs are written; in other words, there is no configuration option. I\u0027m not sure myself if there should be a configuration option - I\u0027m leaning towards including one, but am open to opinions.\n\nAFAIK, cgit does not have such a configuration (commitgraph.computeChangedPaths), so I agree with you.\n\nIf users want to generate a commitgraph without bloomfilter, they can choose to call a lower-level interface.\n\nMaybe we can implement a method like CommitGraphWriter#setComputeChangedPaths(boolean)?\nIn this way, we can implement \"jgit commit-graph write --changed-paths\" and CommitGraphCommand based on this in the future.",
      "parentUuid": "65b99853_d44ccb12",
      "revId": "f9ff7e480da1665b52dcc1d9073911ffc4ee7b38",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6997cf34_726b5a72",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 304466
      },
      "writtenOn": "2023-05-11T02:50:44Z",
      "side": 1,
      "message": "Thanks for your work!\n\nRegards,\nKyle",
      "revId": "f9ff7e480da1665b52dcc1d9073911ffc4ee7b38",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2635821_02a6419e",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/commitgraph/ChangedPathFilter.java",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 304466
      },
      "writtenOn": "2023-05-11T02:50:44Z",
      "side": 1,
      "message": "I noticed that this MurmurHash3 class is imported from commons-codec.\nThis is fine, but there is one thing needs attention:\n\nIt couldn\u0027t pass the test case in [1], MurmurHash3Test#testUnseededString3() and MurrmurHash3Test#testUnseededString4() would be failed.\n\nThis is actually a big problem, it means that the bloomFilter generated by JGit cannot be compatible with CGit when the user\u0027s repository paths contain these characters (byte over than 0xff).\n\nI also made such a mistake at the beginning, and after some investigation, I found the reason: Cgit did\u0027t mask the int with 0xff, which made the result of the hash different from ours.\n\nLater I pushed a patch to fix it, you can refer to [2].\n\nI think it\u0027s better to ensure compatibility with cgit without modifying the source code. If you have any good suggestions?\n\n\n[1] https://git.eclipse.org/r/c/jgit/jgit/+/189100/3/org.eclipse.jgit.test/tst/org/eclipse/jgit/util/MurmurHash3Test.java\n[2] https://git.eclipse.org/r/c/jgit/jgit/+/189100/1..2/org.eclipse.jgit/src/org/eclipse/jgit/util/MurmurHash3.java#121",
      "range": {
        "startLine": 61,
        "startChar": 14,
        "endLine": 61,
        "endChar": 36
      },
      "revId": "f9ff7e480da1665b52dcc1d9073911ffc4ee7b38",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ]
}