{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c7b1ebba_cca1b395",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 49
      },
      "writtenOn": "2023-10-21T19:45:10Z",
      "side": 1,
      "message": "Just thinking out loud, would it make the \"rename\" operation more _atomic_ if we first move .idx, .bitmap and .pack into _staled_ directory, then copy them with new names back in the reverse order, first .pack, then .bitmap and finally .index?\n\nFor sure this will be a more IO-intense operation and the repo data will consume more space, but if it will reduce the possibility of race conditions it may be worth giving it a try. WDYT?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 48
      },
      "revId": "ab3dc9bd1d62d4bd3d704faf44f1efe5f78be05d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43184e81_617c4541",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1541
      },
      "writtenOn": "2023-10-23T14:53:03Z",
      "side": 1,
      "message": "\u003e Just thinking out loud, would it make the \"rename\" operation more _atomic_ if we first move .idx, .bitmap and .pack into _staled_ directory, then copy them with new names back in the reverse order, first .pack, then .bitmap and finally .index?\n\nUnfortunately I don\u0027t think that improves it over the existing solution. Either way you have points in time where only some of the files are present. Now, if each pack were actually a directory, then staging the files into a directory and moving the completed directory into place would likely be an improvement. But I think that kind of re-org would need support in git.git too for compatibility.",
      "parentUuid": "c7b1ebba_cca1b395",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 48
      },
      "revId": "ab3dc9bd1d62d4bd3d704faf44f1efe5f78be05d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cec9583_a033b329",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 49
      },
      "writtenOn": "2023-10-23T20:21:30Z",
      "side": 1,
      "message": "so maybe we can make use of `lock` files, telling jgit that the PACK file is not fully ready yet. It may be wishful tinking and adding more complexity but would be probably the closest to an _atomic_ operation as we can get.\n\nI\u0027m just afraid that only changing the order of operations may not be enough and we could be back to similar problems in the future.",
      "parentUuid": "43184e81_617c4541",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 48
      },
      "revId": "ab3dc9bd1d62d4bd3d704faf44f1efe5f78be05d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8928af0_3f766ce2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-22T10:56:05Z",
      "side": 1,
      "message": "Would it make sense to move this to master?",
      "revId": "ab3dc9bd1d62d4bd3d704faf44f1efe5f78be05d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67eb6e55_7fcce84a",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GC.java",
        "patchSetId": 2
      },
      "lineNbr": 1136,
      "author": {
        "id": 1541
      },
      "writtenOn": "2023-01-03T18:18:18Z",
      "side": 1,
      "message": "Your new ordering seems to violate this comment. I would check the code in PackDirectory.scanPacksImpl() and see if this comment is still accurate. You may also need to confirm git.git has the same behavior as I think in general git is more forgiving of .pack without .idx but not .idx without .pack.",
      "range": {
        "startLine": 1134,
        "startChar": 0,
        "endLine": 1136,
        "endChar": 40
      },
      "revId": "ab3dc9bd1d62d4bd3d704faf44f1efe5f78be05d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ],
  "submitRequirementResults": []
}