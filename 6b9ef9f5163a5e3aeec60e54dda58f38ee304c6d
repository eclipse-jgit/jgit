{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0fed3c47_76033de0",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/FileReftableTest.java",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-01-29T15:29:21Z",
      "side": 0,
      "message": "I believe this test should be kept, see the associated discussion with Han-Wen who initially implemented the ref-table at https://eclipse.gerrithub.io/c/eclipse-jgit/jgit/+/146568/comment/f928708b_14ac9263/",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 96,
        "endChar": 27
      },
      "revId": "6b9ef9f5163a5e3aeec60e54dda58f38ee304c6d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e98b9c30_775ad1f8",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/FileReftableTest.java",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2025-01-31T22:54:45Z",
      "side": 0,
      "message": "With the auto-refresh this change introduces this test can\u0027t be implemented anymore using a single thread since then the auto-refresh always detects that the ref was updated by the ref update done via the first FileReftableDatabase instance of the first FileRepository instance and refreshes the ReftableStack of the second FileReftableDatabase instance before the second ref update is executed. Therefor the ref update is not based on an outdated read and hence doesn\u0027t fail with a LOCK_FAILURE. \n\nHence I changed the testRacyReload test to run the competing ref updates from two threads using a CyclicBarrier to ensure the ref updates are done concurrently which shows both that the result of the auto-refresh is still racy (as discussed above) and the protection against updates based on an outdated read still works and fails with a LOCK_FAILURE.",
      "parentUuid": "0fed3c47_76033de0",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 96,
        "endChar": 27
      },
      "revId": "6b9ef9f5163a5e3aeec60e54dda58f38ee304c6d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b76a836_c6dd6d5b",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/FileReftableTest.java",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-02-07T08:59:00Z",
      "side": 0,
      "message": "\u003e With the auto-refresh this change introduces this test can\u0027t be implemented anymore using a single thread since then the auto-refresh always detects that the ref was updated by the ref update done via the first FileReftableDatabase instance of the first FileRepository instance and refreshes the ReftableStack of the second FileReftableDatabase instance\n\nThat is the issue I believe: one of the key features of the RefTable is read consistency: if the data changes in the RefTable _behind the reader\u0027s back_ and the reader cannot realise the change that happened, then the subsequent operation (e.g. update) may not be consistent.\n\nSee the ref-table consistent snapshot specifications at https://git-scm.com/docs/reftable#_readers",
      "parentUuid": "e98b9c30_775ad1f8",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 96,
        "endChar": 27
      },
      "revId": "6b9ef9f5163a5e3aeec60e54dda58f38ee304c6d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91d65cb8_9931708d",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/FileReftableTest.java",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2025-02-07T14:29:36Z",
      "side": 0,
      "message": "Ok, but doesn\u0027t the updated concurrent `#testRacyReload` show that ref updates based on an outdated read still fail ?\n\nLooking from perspective of the `RefDatabase` API without the auto-refresh the behaviour implicitly depends on which subclass is used, `RefDirectory` or `FileReftableDatabase`. \n\nWe can surface this to the API by adding a method `#setReadConsistency` accepting the values `CONSISTENT_READ` and `AUTO_REFRESH`  so that clients can control if they want consistent read or auto-refresh. I guess that consistent reads are only relevant if a client wants to update multiple refs in one transaction and doesn\u0027t read all these refs in one method call e.g. by calling `#exactRef` multiple times for different refs. I suppose that in EGit I don\u0027t need to care about read consistency but rather want auto-refresh since there users want to always see the current state and this should be updated asap not regarding whether ref updates are done in Eclipse or using C git from a terminal.\n\nI guess I should write more tests with `BatchRefUpdate` updating multiple refs to cover such scenarios.",
      "parentUuid": "1b76a836_c6dd6d5b",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 96,
        "endChar": 27
      },
      "revId": "6b9ef9f5163a5e3aeec60e54dda58f38ee304c6d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1e6283e_f8665b70",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/FileReftableTest.java",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2025-02-14T01:29:21Z",
      "side": 0,
      "message": "- added config and method to enable/disable auto-refresh\n- restored #testRacyReload with auto-refresh disabled",
      "parentUuid": "91d65cb8_9931708d",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 96,
        "endChar": 27
      },
      "revId": "6b9ef9f5163a5e3aeec60e54dda58f38ee304c6d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63032eb1_8014b6b5",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/FileReftableTest.java",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-03-04T22:00:44Z",
      "side": 0,
      "message": "\u003e - added config and method to enable/disable auto-refresh\n\u003e - restored #testRacyReload with auto-refresh disabled\n\nüëç Thanks @matthias.sohn@sap.com",
      "parentUuid": "f1e6283e_f8665b70",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 96,
        "endChar": 27
      },
      "revId": "6b9ef9f5163a5e3aeec60e54dda58f38ee304c6d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}