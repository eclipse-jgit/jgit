{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3f3ffc52_c8f6c4de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-01-30T17:54:37Z",
      "side": 1,
      "message": "@hanwenn@gmail.com @matthias.sohn@sap.com did you also discuss the option of opening the _read snapshot_ when the Repository is opened from RepositoryCache and releasing it when is closed?\n\nI am concerned that the read performance would be massively reduced by this change, which would make the adoption of refTable less appealing for users.\n\nP.S. I can share some stats already from our tests of Gatling tests with Gerrit w/ packed-refs vs. Gerrit w/ref-table and the results are outstanding already.",
      "revId": "39b12f2e99d981f74f98220837437f19e5b76385",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75ef8574_9257097e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2025-01-30T20:28:06Z",
      "side": 1,
      "message": "\u003e opening the read snapshot\n\nYes, that it is a good idea.\n\n\u003eP.S. I can share some stats already from our tests of Gatling tests with Gerrit w/ packed-refs vs. Gerrit w/ref-table and the results are outstanding already.\n\nyes, I\u0027d love to.",
      "parentUuid": "3f3ffc52_c8f6c4de",
      "revId": "39b12f2e99d981f74f98220837437f19e5b76385",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0696aa9_ffee8aab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-02-07T08:59:29Z",
      "side": 1,
      "message": "@syntonyze@gmail.com has performed the tests and will share the results with a link here.",
      "parentUuid": "75ef8574_9257097e",
      "revId": "39b12f2e99d981f74f98220837437f19e5b76385",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ea84c5c_93f89001",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2025-02-07T10:02:29Z",
      "side": 1,
      "message": "Yep let me look into this",
      "parentUuid": "e0696aa9_ffee8aab",
      "revId": "39b12f2e99d981f74f98220837437f19e5b76385",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75efc811_ca5af319",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2025-02-07T15:37:03Z",
      "side": 1,
      "message": "Unfortunately, I don\u0027t have proper test results, nicely graphed out and formatted.\n\nHowever, I extracted some info from the logs, and this is a quick and dirty comparison of git-receive-pack latencies obtained by pointing gatling tests writing to Gerrit with 70 users in parallel [1]\n\nLatencies against a file-based packed-ref repo, raise to the order of multiple dozens of seconds (and do so immediately, due to locking).\n\nThe same simulation (70 users) against a reftable repo shows much much better results, only taking up a few seconds.\n\n[1] https://pastebin.com/raw/3kvjARa0",
      "parentUuid": "8ea84c5c_93f89001",
      "revId": "39b12f2e99d981f74f98220837437f19e5b76385",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "776237c1_243b78e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2025-02-14T01:29:21Z",
      "side": 1,
      "message": "I don\u0027t understand how these Gatling tests relate to using auto-refresh or not.\n\nThe updated benchmark shows that auto-refresh causes a performance penalty which is heavily reduced by using a FileSnapshot to detect if refresh is necessary (https://eclipse.gerrithub.io/c/eclipse-jgit/jgit/+/1206684). Though a ref update without auto-refresh has a higher likelihood to fail due to an outdated read which will needs to be repeated after a refresh which adds a similar overhead.",
      "parentUuid": "75efc811_ca5af319",
      "revId": "39b12f2e99d981f74f98220837437f19e5b76385",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}