{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2f660d8a_ae8f5ef3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-09T18:15:03Z",
      "side": 1,
      "message": "Thanks, I agree this makes more resilient code! Logic looks fine to me, just minor styling comments.",
      "revId": "39c37d26be16f5f150690059539d8e2b9a537eef",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ac5b9b4_d2f39fb3",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/GcOrphanFilesTest.java",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-09T18:15:03Z",
      "side": 1,
      "message": "IIUC in the stack this hasn\u0027t been added yet? (you can put adding that extension before this change)",
      "revId": "39c37d26be16f5f150690059539d8e2b9a537eef",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "025b2816_392e4dd2",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/GcOrphanFilesTest.java",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 307629
      },
      "writtenOn": "2022-12-14T00:02:11Z",
      "side": 1,
      "message": "It was previously merged in https://git.eclipse.org/r/c/jgit/jgit/+/196888",
      "parentUuid": "1ac5b9b4_d2f39fb3",
      "revId": "39c37d26be16f5f150690059539d8e2b9a537eef",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfcecc48_60b5b461",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/GcOrphanFilesTest.java",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-09T18:15:03Z",
      "side": 1,
      "message": "Could we have a test case where there is no pack but there are still some indices? gc should clean up those indices.",
      "revId": "39c37d26be16f5f150690059539d8e2b9a537eef",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16252fb3_44c402ca",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/GcOrphanFilesTest.java",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 307629
      },
      "writtenOn": "2022-12-14T00:02:11Z",
      "side": 1,
      "message": "I\u0027ll add one named `noPacks_allIndexesDeleted`, let me know if that\u0027s what you were thinking of.",
      "parentUuid": "dfcecc48_60b5b461",
      "revId": "39c37d26be16f5f150690059539d8e2b9a537eef",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae85fbc5_13a85369",
        "filename": "org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/file/GcOrphanFilesTest.java",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-14T03:14:10Z",
      "side": 1,
      "message": "Yes, thanks!",
      "parentUuid": "16252fb3_44c402ca",
      "revId": "39c37d26be16f5f150690059539d8e2b9a537eef",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cde322fd_d29c7af1",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GC.java",
        "patchSetId": 3
      },
      "lineNbr": 945,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-09T18:15:03Z",
      "side": 1,
      "message": "Maybe we could use the \"sidecar\" and \"main\" naming convention to make this clearer, so orphan is a sidecar without a main file.\n\nThese would be \"sidecarFiles\", and the set blow \"knownMainFiles\".",
      "revId": "39c37d26be16f5f150690059539d8e2b9a537eef",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f434073_f55f80cf",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GC.java",
        "patchSetId": 3
      },
      "lineNbr": 945,
      "author": {
        "id": 307629
      },
      "writtenOn": "2022-12-14T00:02:11Z",
      "side": 1,
      "message": "IMO, introducing another real-world reference (main/sidecar as well as parent/orphan) would make this more confusing. \n\nAssuming that we keep the function name as `deleteOrphans()`, is there some terminology that you like that stays within the existing reference, or uses the actual terms (packs/indexes)?\n\nHow about any of:\n`potentialOrphanFiles` --\u003e `childFiles`\n`potentialOrphanFiles` --\u003e `indexFiles`\n`seenPackFileIds` --\u003e `knownPackFileIds`\n`seenPackFileIds` --\u003e `presentPackFileIds`\n`seenPackFileIds` --\u003e `seenParentFileIds`\n?",
      "parentUuid": "cde322fd_d29c7af1",
      "revId": "39c37d26be16f5f150690059539d8e2b9a537eef",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b64f1283_668811a4",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GC.java",
        "patchSetId": 3
      },
      "lineNbr": 945,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-14T03:14:10Z",
      "side": 1,
      "message": "Optional: Maybe childFiles/indexFiles, as you see fit. Maybe I got used to the terminology, it doesn\u0027t look all that bad anymore and it is restricted to this method.",
      "parentUuid": "0f434073_f55f80cf",
      "revId": "39c37d26be16f5f150690059539d8e2b9a537eef",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf2a3389_46ed5f3c",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GC.java",
        "patchSetId": 3
      },
      "lineNbr": 954,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-09T18:15:03Z",
      "side": 1,
      "message": "Lambdas with try/catch tend to look messy...\n\nCould we add a method \"PackFile asPackFile(String name)\" to the class and do here .map(this::asPackFile)?",
      "range": {
        "startLine": 949,
        "startChar": 19,
        "endLine": 954,
        "endChar": 8
      },
      "revId": "39c37d26be16f5f150690059539d8e2b9a537eef",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "643f24ad_ff4e5312",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GC.java",
        "patchSetId": 3
      },
      "lineNbr": 954,
      "author": {
        "id": 307629
      },
      "writtenOn": "2022-12-14T00:02:11Z",
      "side": 1,
      "message": "What is `this` is `.map(this::asPackFile)`? \n\nThe `name` that the current `map` is acting on is simply a `String`, not a `PackFile`, so it can\u0027t be that.\n\n\nWhile re-examining this, I noticed that the two `map` clauses can be combined: we can simply make a `PackFile` from the full `Path`, rather than splitting the directory and filename portion before making the `PackFile`. I\u0027ll upload this simplification for now.",
      "parentUuid": "bf2a3389_46ed5f3c",
      "range": {
        "startLine": 949,
        "startChar": 19,
        "endLine": 954,
        "endChar": 8
      },
      "revId": "39c37d26be16f5f150690059539d8e2b9a537eef",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76c484eb_1a33ac2c",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GC.java",
        "patchSetId": 3
      },
      "lineNbr": 954,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-14T03:14:10Z",
      "side": 1,
      "message": "You could have\nprivate static Packfile asPackFile(String file) {\n   // code now in the map\n}\n\nand then\n.map(GC::asPackFile)\n\nThe map has strings as inputs and produces a stream of Packfiles.\n\nIf the method is not static, then you could do\n.map(this::asPackFile) \nand it would use the method in the \"this\", the current instance",
      "parentUuid": "643f24ad_ff4e5312",
      "range": {
        "startLine": 949,
        "startChar": 19,
        "endLine": 954,
        "endChar": 8
      },
      "revId": "39c37d26be16f5f150690059539d8e2b9a537eef",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2f6de6b_b3753656",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GC.java",
        "patchSetId": 3
      },
      "lineNbr": 954,
      "author": {
        "id": 307629
      },
      "writtenOn": "2022-12-14T18:02:06Z",
      "side": 1,
      "message": "Thanks for clarifying! I\u0027ll go with a static one, since the logic is not specific to properties of the `GC` class.",
      "parentUuid": "76c484eb_1a33ac2c",
      "range": {
        "startLine": 949,
        "startChar": 19,
        "endLine": 954,
        "endChar": 8
      },
      "revId": "39c37d26be16f5f150690059539d8e2b9a537eef",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a5b1d57_a37a8bc8",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GC.java",
        "patchSetId": 3
      },
      "lineNbr": 961,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-09T18:15:03Z",
      "side": 1,
      "message": "We can shorten this lambda function and make it clearer moving this check to its own filter step:\n.filter(p -\u003e packFile.getPackExt() !\u003d null)",
      "range": {
        "startLine": 958,
        "startChar": 6,
        "endLine": 961,
        "endChar": 7
      },
      "revId": "39c37d26be16f5f150690059539d8e2b9a537eef",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deffdfef_952837be",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GC.java",
        "patchSetId": 3
      },
      "lineNbr": 961,
      "author": {
        "id": 307629
      },
      "writtenOn": "2022-12-14T00:02:11Z",
      "side": 1,
      "message": "I realized that I meant to share the `ext` variable throughout this `filter` clause, which IMO clarifies the logic by grouping the examination of the `PackExt`.\n\nI\u0027ll update to share that variable, and lmk if you think it still looks better in two steps.",
      "parentUuid": "1a5b1d57_a37a8bc8",
      "range": {
        "startLine": 958,
        "startChar": 6,
        "endLine": 961,
        "endChar": 7
      },
      "revId": "39c37d26be16f5f150690059539d8e2b9a537eef",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6877c9a4_b37b1202",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GC.java",
        "patchSetId": 3
      },
      "lineNbr": 961,
      "author": {
        "id": 201156
      },
      "writtenOn": "2022-12-14T03:14:10Z",
      "side": 1,
      "message": "I still think is better in two steps because it makes obvious that the packs without extension are ignored.\n\nThe filter handling the extension is already asymetrical: either they go to \"seen\" and filtered out, or continue in the stream. The extra case of \"simply ignore\" requires a more careful reading.",
      "parentUuid": "deffdfef_952837be",
      "range": {
        "startLine": 958,
        "startChar": 6,
        "endLine": 961,
        "endChar": 7
      },
      "revId": "39c37d26be16f5f150690059539d8e2b9a537eef",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb63a4a1_0843d9df",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GC.java",
        "patchSetId": 3
      },
      "lineNbr": 961,
      "author": {
        "id": 307629
      },
      "writtenOn": "2022-12-14T18:02:06Z",
      "side": 1,
      "message": "Sounds good, I\u0027ll split it out! I actually thinks it fits nicely into the small separated logic method that you recommended above.",
      "parentUuid": "6877c9a4_b37b1202",
      "range": {
        "startLine": 958,
        "startChar": 6,
        "endLine": 961,
        "endChar": 7
      },
      "revId": "39c37d26be16f5f150690059539d8e2b9a537eef",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ]
}