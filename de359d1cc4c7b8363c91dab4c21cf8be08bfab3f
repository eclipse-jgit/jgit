{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e8b495c0_82f47086",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 7,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T15:33:14Z",
      "side": 1,
      "message": "locked packs",
      "range": {
        "startLine": 7,
        "startChar": 8,
        "endLine": 7,
        "endChar": 18
      },
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd57069b_6749d036",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 9,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T15:33:14Z",
      "side": 1,
      "message": "locked by a PackLock (.keep file)",
      "range": {
        "startLine": 9,
        "startChar": 10,
        "endLine": 9,
        "endChar": 41
      },
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b3ca1c2_e5f13334",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 11,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T15:33:14Z",
      "side": 1,
      "message": "referenced",
      "range": {
        "startLine": 11,
        "startChar": 41,
        "endLine": 11,
        "endChar": 48
      },
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e91da19f_35b7d2ab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T15:33:14Z",
      "side": 1,
      "message": "referencing",
      "range": {
        "startLine": 18,
        "startChar": 39,
        "endLine": 18,
        "endChar": 50
      },
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6221f55_da3e8db8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 19,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T15:33:14Z",
      "side": 1,
      "message": "being",
      "range": {
        "startLine": 19,
        "startChar": 48,
        "endLine": 19,
        "endChar": 54
      },
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a754d5be_694e8211",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 22,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T15:33:14Z",
      "side": 1,
      "message": "BLOBs already present in another, not locked packfile",
      "range": {
        "startLine": 22,
        "startChar": 39,
        "endLine": 22,
        "endChar": 53
      },
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b7b2443_5e2965aa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T15:33:14Z",
      "side": 1,
      "message": "we cannot simply exclude all objects in the locked pack",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 26,
        "endChar": 8
      },
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f10fcf97_190a84af",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 27,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T15:33:14Z",
      "side": 1,
      "message": "excluding valid git objects present in other packfiles",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 26
      },
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ec57b76_1ec712a2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 30,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T15:33:14Z",
      "side": 1,
      "message": "excluded",
      "range": {
        "startLine": 30,
        "startChar": 42,
        "endLine": 30,
        "endChar": 49
      },
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3e1b30a_2f991080",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 32,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T15:33:14Z",
      "side": 1,
      "message": "excluding all git objects it contains from",
      "range": {
        "startLine": 31,
        "startChar": 3,
        "endLine": 32,
        "endChar": 11
      },
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88041526_7afb0aa8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T15:33:14Z",
      "side": 1,
      "message": "potentially excluding objects also present in other, not locked packfiles",
      "range": {
        "startLine": 33,
        "startChar": 15,
        "endLine": 33,
        "endChar": 40
      },
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffa3511d_137a354c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 36,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T15:33:14Z",
      "side": 1,
      "message": "locked packfiles are",
      "range": {
        "startLine": 36,
        "startChar": 19,
        "endLine": 36,
        "endChar": 39
      },
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb49f687_b391c63a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 37,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T15:33:14Z",
      "side": 1,
      "message": "skipped when discovering packfiles",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 47
      },
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b880a87c_797270a9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 39,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T15:33:14Z",
      "side": 1,
      "message": "ensuring that no objects which are redundantly contained in other packfiles are excluded",
      "range": {
        "startLine": 38,
        "startChar": 11,
        "endLine": 39,
        "endChar": 21
      },
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16499fcd_8390cc04",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 42,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T15:33:14Z",
      "side": 1,
      "message": "How can this happen ?",
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd3bfd09_dafe7aff",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/ObjectReaderExcludingPacks.java",
        "patchSetId": 9
      },
      "lineNbr": 40,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T15:33:14Z",
      "side": 1,
      "message": "I don\u0027t like this wrapping business. \n\nCan\u0027t we simply exclude locked packs from PackDirectory\u0027s packlist when scanning the `pack/` directory to create/update the packlist ? Or is there some code coping with locked packs which is using the packlist ?",
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "526a46ff_93a4d09a",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/ObjectReaderExcludingPacks.java",
        "patchSetId": 9
      },
      "lineNbr": 40,
      "author": {
        "id": 97483
      },
      "writtenOn": "2023-09-05T15:51:18Z",
      "side": 1,
      "message": "The thing is that the packlist needs to contain all packfiles, including the ones locked with the `.keep` file. However, they should not considered for the repacking business because of two reasons:\n\n1. They cannot be pruned, therefore their content should not referenced by any bitmaps and not included in the repacked packfile\n\n2. They may contain existing Git objects already included in other packfiles, so it cannot be simply excluded at object-level, otherwise it would cause the creation of an invalid bitmap (see the parent change that shows the bug).\n\nI agree that wrapping is always a maintenance pain, which alternative approach would you suggest?",
      "parentUuid": "cd3bfd09_dafe7aff",
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78534393_2105f58c",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/ObjectReaderExcludingPacks.java",
        "patchSetId": 9
      },
      "lineNbr": 40,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T20:05:34Z",
      "side": 1,
      "message": "I am not sure, which code expects that the packlist contains all packfiles including locked ones ?\n\n- PackList is only used in PackDirectory and I couldn\u0027t find any usages which should consider locked packfiles.\n- it seems PackLock is only used in PackParser and classes used in fetch/receive-pack and when explicitly indexing a packfile\n\nI think this makes sense since packs locked by a .keep file should be treated as non-existing for any access to (committed) git objects. Only the code owning the PackLock should have read/write access to the objects in a locked pack until the PackLock is destroyed when the transaction it implements finishes.",
      "parentUuid": "526a46ff_93a4d09a",
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d32d846a_0a297faa",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/ObjectReaderExcludingPacks.java",
        "patchSetId": 9
      },
      "lineNbr": 40,
      "author": {
        "id": 49
      },
      "writtenOn": "2023-09-20T15:48:21Z",
      "side": 1,
      "message": "I was digging into this issue for a few hours and got a few insights. I may be lacking some internal jGit knowledge and understanding, but let me summarize what I\u0027ve found.\n\nFirst I\u0027ve looked into `PackDirectory` as Matthias is proposing. It looked promising, as in `PackDirectory.scanPackImpl()` we can exclude `.keep` files. But when the GC is called for the third time from the reproduction test case, that list of pack files is already built and cached, so `scanPackImpl()` won\u0027t be even called. All calls to `PackDirectory.getPacks()` will return a copy of the `packList` member. Potentially we may filter out packs with the `.keep` file on each call to `getPacks()` but that would be unnecessary overhead for all calls.\n\nSecondly, I\u0027ve looked into `PackWriter` to see why it\u0027s not honouring excluded objects. In the `GC.writePack()` we\u0027re adding excluded objects to the writer on line 1179. But then, when the pack file is written (`GC.java:1206`) the `PackWriter.writePack()` clears a list of excluded ObjectIds (`PackWriter.java:1225`). So when we then prepare to write the bitmap file (`GC.java:1221`), `PackWriter` has forgotten about all of the excluded objects.\n\nI\u0027ve tried to modify `PackWriter.prepareBitmapIndex()` to handle excluded objects but went nowhere with it.\n\nThe third attempt was to _just fix the `-1` index_ and it worked! All the tests seem to be green (the changes to `GcKeepFilesTest.java` must be reverted). This may not be the ultimate fix for the `.keep` files, but at least it is fixing the `ArrayIndexOutOfBoundsException` reported by the user. Here\u0027s the diff:\n\n```diff\ndiff --git a/org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackBitmapIndexRemapper.java b/org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackBitmapIndexRemapper.java\nindex dd5d03c6e..b6842fc36 100644\n--- a/org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackBitmapIndexRemapper.java\n+++ b/org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/PackBitmapIndexRemapper.java\n@@ -157,8 +157,11 @@ public EWAHCompressedBitmap getBitmap(AnyObjectId objectId) {\n \n                inflated.clear();\n                for (IntIterator i \u003d oldBitmap.getBitmapWithoutCaching()\n-                               .intIterator(); i.hasNext();)\n-                       inflated.set(prevToNewMapping[i.next()]);\n+                               .intIterator(); i.hasNext();) {\n+                       int position \u003d prevToNewMapping[i.next()];\n+                       if (position \u003e -1)\n+                               inflated.set(position);\n+               }\n                bitmap \u003d inflated.toEWAHCompressedBitmap();\n                bitmap.trim();\n                return bitmap;\n```",
      "parentUuid": "78534393_2105f58c",
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0166db4_342fc1dd",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/ObjectReaderExcludingPacks.java",
        "patchSetId": 9
      },
      "lineNbr": 40,
      "author": {
        "id": 97483
      },
      "writtenOn": "2023-09-20T20:13:53Z",
      "side": 1,
      "message": "Cool, can you upload your fix as a separate change? I would be happy to test it E2E and see if resolves the issues !",
      "parentUuid": "d32d846a_0a297faa",
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0214b136_b1fbadab",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/ObjectReaderExcludingPacks.java",
        "patchSetId": 9
      },
      "lineNbr": 40,
      "author": {
        "id": 49
      },
      "writtenOn": "2023-09-21T08:38:44Z",
      "side": 1,
      "message": "Here\u0027s the proposed fix (or rather workaround) for ArrayIndexOutOfBoundsException",
      "parentUuid": "a0166db4_342fc1dd",
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5478a070_7e3c09c5",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/ObjectReaderExcludingPacks.java",
        "patchSetId": 9
      },
      "lineNbr": 40,
      "author": {
        "id": 49
      },
      "writtenOn": "2023-09-21T08:39:08Z",
      "side": 1,
      "message": "https://git.eclipse.org/r/c/jgit/jgit/+/204473",
      "parentUuid": "0214b136_b1fbadab",
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2038be6d_971ff328",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/ObjectReaderExcludingPacks.java",
        "patchSetId": 9
      },
      "lineNbr": 58,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-09-05T15:33:14Z",
      "side": 1,
      "message": "the API is defined by the superclass hence no @since tag on overridden method which doesn\u0027t define new API",
      "revId": "de359d1cc4c7b8363c91dab4c21cf8be08bfab3f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ]
}