{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "14b6a9a5_f0615705",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-04-06T18:03:21Z",
      "side": 1,
      "message": "remove this word to fix this sentence",
      "range": {
        "startLine": 7,
        "startChar": 43,
        "endLine": 7,
        "endChar": 48
      },
      "revId": "fb84c576f2269543d0e9bfc40f28ef1ea09e8f47",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5783d0d1_1da54ade",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-04-06T18:03:21Z",
      "side": 1,
      "message": "use past tense to describe state before this fix:\n\nwas",
      "range": {
        "startLine": 10,
        "startChar": 37,
        "endLine": 10,
        "endChar": 44
      },
      "revId": "fb84c576f2269543d0e9bfc40f28ef1ea09e8f47",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1aaac43_5682f39c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 4
      },
      "writtenOn": "2023-04-06T18:03:21Z",
      "side": 1,
      "message": "was",
      "range": {
        "startLine": 11,
        "startChar": 13,
        "endLine": 11,
        "endChar": 15
      },
      "revId": "fb84c576f2269543d0e9bfc40f28ef1ea09e8f47",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f097e3a_f27156c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 201156
      },
      "writtenOn": "2023-04-05T19:22:05Z",
      "side": 1,
      "message": "Great catch, thanks!\n\n#parseCanonical should be private and save us this trouble. It only messes up the life-cycle of the RevCommit, but it is not trivial to get rid of it so lets go with this.",
      "revId": "fb84c576f2269543d0e9bfc40f28ef1ea09e8f47",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34351846_1dcbc1db",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/RevCommit.java",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 201156
      },
      "writtenOn": "2023-04-05T19:22:05Z",
      "side": 1,
      "message": "Nit: explain \"Populated only after #parseHeader with #isRetainBody enable or after #parseBody.\"",
      "revId": "fb84c576f2269543d0e9bfc40f28ef1ea09e8f47",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ddf8f9cc_f821c1a2",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/RevCommit.java",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 304466
      },
      "writtenOn": "2023-04-06T03:14:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "34351846_1dcbc1db",
      "revId": "fb84c576f2269543d0e9bfc40f28ef1ea09e8f47",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6141933_5b316544",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/RevCommitCG.java",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 201156
      },
      "writtenOn": "2023-04-05T19:33:27Z",
      "side": 1,
      "message": "This #parseBody will do:\n\n\t\tif (buffer \u003d\u003d null) {\n\t\t\tbuffer \u003d walk.getCachedBytes(this);\n\t\t\tif ((flags \u0026 PARSED) \u003d\u003d 0)\n\t\t\t\tparseCanonical(walk, buffer);\n\t\t}\n\t\t\nand #parseCanonical calls parseInGraph again.\n\nShould it be the other way around?\n\nif (isRetainBody) {\n   super.parseBody() // This parses header and body\n   return;\n}\nparseInGraph(walk);",
      "revId": "fb84c576f2269543d0e9bfc40f28ef1ea09e8f47",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1dda4437_db570aa9",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/revwalk/RevCommitCG.java",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 304466
      },
      "writtenOn": "2023-04-06T03:14:30Z",
      "side": 1,
      "message": "\u003e This #parseBody will do:\n\u003e \n\u003e \t\tif (buffer \u003d\u003d null) {\n\u003e \t\t\tbuffer \u003d walk.getCachedBytes(this);\n\u003e \t\t\tif ((flags \u0026 PARSED) \u003d\u003d 0)\n\u003e \t\t\t\tparseCanonical(walk, buffer);\n\u003e \t\t}\n\u003e \t\t\n\u003e and #parseCanonical calls parseInGraph again.\n\nIt won\u0027t, because the flag will be set to PARSED after #parseInGraph().\n\n\u003e \n\u003e Should it be the other way around?\n\u003e \n\u003e if (isRetainBody) {\n\u003e    super.parseBody() // This parses header and body\n\u003e    return;\n\u003e }\n\u003e parseInGraph(walk);\n\nAgree. \n\nIt looks better than mine, which will be one less RevCommit flag comparison.",
      "parentUuid": "e6141933_5b316544",
      "revId": "fb84c576f2269543d0e9bfc40f28ef1ea09e8f47",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ]
}