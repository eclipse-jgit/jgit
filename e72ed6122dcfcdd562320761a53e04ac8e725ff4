{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "634fd221_96059e90",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CoreConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 277,
      "author": {
        "id": 1038403
      },
      "writtenOn": "2025-02-02T01:01:30Z",
      "side": 1,
      "message": "Either the config parsing should get an isSet() method to avoid having to call this and then isEmptyOrNull(), or probably better would be to add a getBoolean() and getEnum() methods which return an Optional instead.",
      "revId": "e72ed6122dcfcdd562320761a53e04ac8e725ff4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4e76630_b8c23408",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CoreConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 277,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2025-02-02T21:51:16Z",
      "side": 1,
      "message": "Done\n\nChanging the return type would be a breaking change, we may consider that in the next major release.",
      "parentUuid": "634fd221_96059e90",
      "revId": "e72ed6122dcfcdd562320761a53e04ac8e725ff4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a087bf8_1753ad4f",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CoreConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 277,
      "author": {
        "id": 1038403
      },
      "writtenOn": "2025-02-03T17:27:17Z",
      "side": 1,
      "message": "I don\u0027t think that allowing null to be returned would break anything if the only way that null could be returned is if the defaultValue were passed in as null, would it? It might break any code expecting a null being passed in to throw an exception, but do we care about that?",
      "parentUuid": "d4e76630_b8c23408",
      "revId": "e72ed6122dcfcdd562320761a53e04ac8e725ff4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3fef394_9b4e8cbf",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CoreConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 277,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2025-02-03T17:48:46Z",
      "side": 1,
      "message": "I was referring to your proposal to return an Optional.\n\nI agree instead of introducing #isSet methods we could pass a null default value to the typed getters and compare the returned value to null to find out if the value is set.",
      "parentUuid": "5a087bf8_1753ad4f",
      "revId": "e72ed6122dcfcdd562320761a53e04ac8e725ff4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27d5e5e7_6e5611d3",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CoreConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 277,
      "author": {
        "id": 1038403
      },
      "writtenOn": "2025-02-03T17:54:32Z",
      "side": 1,
      "message": "\u003e I was referring to your proposal to return an Optional.\n\nGotcha, I understand now. Sorry, I wasn\u0027t clear, that proposal was to actually add new overloaded methods which did not take a defaultValue (otherwise the Optional would never need to be empty).\n\nBut I think fewer methods is better, so if we can just handle null parameters, that\u0027s probably better?",
      "parentUuid": "a3fef394_9b4e8cbf",
      "revId": "e72ed6122dcfcdd562320761a53e04ac8e725ff4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8728705_64f6bdf3",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CoreConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 277,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2025-02-03T22:12:21Z",
      "side": 1,
      "message": "For that we would need to add more methods since `#getBoolean, #getInt, #getLong` accept only primitive `boolean, int, long` default values where we can\u0027t pass `null`. Hence I think we better use the `#isSet` methods.",
      "parentUuid": "27d5e5e7_6e5611d3",
      "revId": "e72ed6122dcfcdd562320761a53e04ac8e725ff4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bbb4fb72_d637feee",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CoreConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 277,
      "author": {
        "id": 1038403
      },
      "writtenOn": "2025-02-03T22:17:32Z",
      "side": 1,
      "message": "At least for compile time I think you could change the existing parameters of the existing methods and auto-valuing would make them just work (there would be no source code changes needed by the method callers). However, I suspect that already compiled calls to the older methods would then fail if they weren\u0027t recompiled?",
      "parentUuid": "a8728705_64f6bdf3",
      "revId": "e72ed6122dcfcdd562320761a53e04ac8e725ff4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24fa8914_87076d17",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CoreConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 277,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2025-02-03T22:44:05Z",
      "side": 1,
      "message": "tried that and Eclipse marks such changes (change type of formal method parameter e.g. from `boolean` to `Boolean`) as breaking API, which matches https://github.com/eclipse-platform/eclipse.platform/blob/master/docs/Evolving-Java-based-APIs-2.md#Evolving-API-classes---API-methods-and-constructors",
      "parentUuid": "bbb4fb72_d637feee",
      "revId": "e72ed6122dcfcdd562320761a53e04ac8e725ff4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "914ca7db_86a24d6e",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CoreConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 277,
      "author": {
        "id": 1038403
      },
      "writtenOn": "2025-02-04T00:02:38Z",
      "side": 1,
      "message": "Interestingly enough, I seem to be able to add methods with effectively the same signatures except for replacing boolean with Boolean for parameters and return types and it compiles. Maybe we should just add the new Boolean method and deprecate the old boolean method?",
      "parentUuid": "24fa8914_87076d17",
      "revId": "e72ed6122dcfcdd562320761a53e04ac8e725ff4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cabc6dca_3dc03907",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CoreConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 280,
      "author": {
        "id": 1038403
      },
      "writtenOn": "2025-02-02T01:01:30Z",
      "side": 1,
      "message": "This should probably be inside the if{} block on line 285.",
      "revId": "e72ed6122dcfcdd562320761a53e04ac8e725ff4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f27817b_86ff719c",
        "filename": "org.eclipse.jgit/src/org/eclipse/jgit/lib/CoreConfig.java",
        "patchSetId": 7
      },
      "lineNbr": 280,
      "author": {
        "id": 1000671
      },
      "writtenOn": "2025-02-02T21:51:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cabc6dca_3dc03907",
      "revId": "e72ed6122dcfcdd562320761a53e04ac8e725ff4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}